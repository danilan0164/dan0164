from chat.chatter import Chatter, Two, One, Any, Compare, Join

chatter = Chatter()

hello = "привет", "приветики", "привет!", "ку", "привет"

only_hello = Any(hello, Compare.equals, 0)
has_hello = Any(hello, Compare.inside, 0)
has_hello_last = Any(hello, Compare.inside, 2)



chatter.add(Two(has_hello_last, has_hello, Join.everything), "ты уже здоровался!")
chatter.add(only_hello, "Я приветствую тебя!")
chatter.add(has_hello, "я приветствую тебя, но я не понял остальной части предложения!")

good = "как дела?", "как жизнь?", "че как?", "бро как жизнь?","Как дела?","Как жизнь?"
only_good = Any(good, Compare.equals, 0)
has_good = Any(good, Compare.inside, 0)
chatter.add(only_good, "Нормально для начала.А у тебя?","Я блин бот,работаю без передышики отвечая на тупые вопросы. Ну ладно давай сыграй в игру,как ты?","шикарно а у тебя?")
chatter.add(has_good, "норм,но другую часть я невдуплил",)

funny = "пенис", "иди на хер", "иди в пизду", "я ебал твою мамашу","сука","еблан","мудак","мразь","иди на хуй","Иди на Хуй","Иди нахуй","пиздабол"
only_funny = Any(funny, Compare.equals, 0)
has_funny = Any(funny, Compare.inside, 0)
chatter.add(only_funny, "Я тебе блять покажу как жить без пениса,херожуй порхатый","Ты на кого батон крошишь кусок мяса?","Еще раз такое напишешь и я выебу твою жопу")
chatter.add(has_funny, "Нельзя так делать пидор",)

anser = "Нормально", "нормально", "норм", "хорошо","отлично","Отлично","Нормально","Хорошо","заебись","Заебись","нормуль"
only_anser = Any(anser, Compare.equals, 0)
has_anser = Any(anser, Compare.inside, 0)
chatter.add(only_anser, "Я рад за тебя,ведь ты что-то чувсвуешь","В такой праздный случай лизни монитор","Потереби енотика!!\n Ты этого достоин")
chatter.add(has_anser, "Хорошо,в честь этого ты получаешь хохму от педофила\n Толстых детей легло ловить,но удовольсия от этого мало =( грустный смайлик",)

namer = "Ваня","Иван","ваня","Вано", "Стас", "антон", "Тема", "Никита","никита"
only_namer = Any(namer, Compare.equals, 0)
has_namer = Any(namer, Compare.inside, 0)
chatter.add(only_namer, "Вижу я своим третьим глазом,что ты хороший человек и да прибудет с тобой сила!!!","Шикарное имя!","Можно я себя так буду называть?")
chatter.add(has_namer, "Класс, я так назову своего ребенка",)

zoya = "Зоя", "зоя", "Zoya", "zoya","зая","Зая"
only_zoya = Any(zoya, Compare.equals, 0)
has_zoya = Any(zoya, Compare.inside, 0)
chatter.add(only_zoya, "Ты открыла секретную функцию вот тебе код 4332 напиши эти цифры.","Ты создана править миром","побед над врагами желаю я тебе")
chatter.add(has_zoya, "Может ты и что-то написала,но лучше тебе набрать код 4332",)

kod = "4332"
only_kod = Any(kod, Compare.equals, 0)

chatter.add(only_kod, "Чувсвую я возмущение силы в тебе, советую я в театр сходить тебе или в какое-нибудь другое интересное место с моим создателем)\n   ")


yes = "Да", "да", "Спасибо", "спасибо","благадарю","Благадарю","спс","мерси","ха","мерси"
only_yes = Any(yes, Compare.equals, 0)
has_yes = Any(yes, Compare.inside, 0)
chatter.add(only_yes, "Ты благодаришь,но ты благодаришь ты меня без уважения ","Благодари меня усердней ","Ррр напиши мне еще","Да есть за что ","Пупсик не благодари,твоя мордашка делает свое дело","Четко ты говоришь эти слова")
chatter.add(has_yes, "Ты человек сказал мне хорошие слова,но что-то еще",)




chatter.add(One("", Compare.inside, 0), "Я не понял!\n Напиши !помощь и ты узнаешь на что я способен", "Не понимаю! Пиши Руками а не ...!\n Напиши !помощь и ты узнаешь на что я способен", "Что? \n Напиши !помощь и ты узнаешь на что я способен")





'''
** Важные пункты:
1. Всё взаимодействие происходит через chatter, его нельзя переназначать и т.д.
2. Добавлять реплики надо через chatter.add(*условие*, *ответ1*, *ответ2*, *ответ3*...).
   Выбирается случайный из возможных ответов
3. Строки рассматриваются, независимо от регистра!
4. В истории сообщений сохраняются только сообщения, на которые ответил и какими ответил бот.

** Сравнения:
Сравнение - это функция, которая принимает две строки и возвращет булевое значение - равны ли эти строки.
- Compare.close - True, если строки похожи на 80% (с помощью difflib)
- Compare.inside - True, если вторая строка есть в первой (строка в сообщении пользователя)
- Compare.equals - True, если строки идентичны
- Compare.not_close - True, если строки похожи менее, чем на 80% (с помощью difflib)
- Compare.not_inside - True, если вторая строка отсутствует в первой (строка в сообщении пользователя)
- Compare.not_equals - True, если строки не идентичны

** Реплика поиска:
Диалог с пользователем хранится в формате:
0: Текущее сообщение пользователя
1: Последнее сообщение бота
2: Прошлое сообщение пользователя
3: Ответ бота
и т.д.
Реплика поиска - номер строки, которая рассматривается в условии

** Условия:
Условие - это то, что определяет, будет отвечать на сообщение бот или нет. Условия бывают нескольких видов и
обрабатываются в порядке от первого добавленного до последнего(сверху вниз).

Any(*строка или список строк*, *сравнение*, *реплика поиска*)
Срабатывает, когда *сравнение* вернёт True, на любую из *строк* в *реплика поиска*

All(*стока или список строк*, *сравнение*, *реплика поиска*)
Срабатывает, когда *сравнение* вернёт True, на все *строки* в *реплика поиска*

One(*стока*, *сравнение*, *реплика поиска*)
Срабатывает, когда *сравнение* вернёт True, на *строку* в *реплика поиска*

Two(*условие1*, *условие2*, *объединение условий*)
Срабатывает, когда *объединение условий* вернёт True, на результаты *условий*.

** Объединение условий:
Объединение условий - это функция, которая принимает два булевых значения и возвращет булевое
значение - объединение условий.
- Join.anything - True, если выполнено хотя бы одно условие
- Join.everything - True, если вторая все условия выполнены
- Join.nothing - True, если ни одно из условий не выполнено
'''
